<?php
namespace app\modules\api\controllers;

use yii\base\Theme;
use Yii;
use app\modules\api\models\db\BioUser;
use app\modules\api\models\db\BioUserDoctor;
use app\modules\api\models\db\BioUserPacient;
use app\modules\api\models\db\BioDistrict;

class SettingsController extends _ApiController
{
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['corsFilter'] = [
            'class' => \yii\filters\Cors::className(),
            'cors' => [
                // restrict access to
                'Origin' => ['*'],
                'Access-Control-Request-Method' => ['POST', 'PUT'],
                // Allow only POST and PUT methods
                'Access-Control-Request-Headers' => ['X-Wsse'],
                // Allow only headers 'X-Wsse'
                'Access-Control-Allow-Credentials' => true,
                // Allow OPTIONS caching
                'Access-Control-Max-Age' => 3600,
                // Allow the X-Pagination-Current-Page header to be exposed to the browser.
                'Access-Control-Expose-Headers' => ['X-Pagination-Current-Page'],
            ],
        ];
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        return $behaviors;
    }

    public function beforeAction($action)
    {
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionDistricts(){
        $all = BioDistrict::find()->all();
        if(count($all) > 0){
            $result = [];
            foreach ($all as $one){
                $result[$one->dist_code] = $one->attributes;
            }
            return [
                'success' => true,
                'result' => $result
            ];
        } else {
            return [
                'success' => false,
            ];
        }
    }


    public function actionAllDoctors()
    {
        $all = BioUserDoctor::find()->all();
        if(count($all) > 0){
            $result = [];
            foreach ($all as $one){
                $result[$one->user_id] = BioUser::getUserInfoById($one->user_id);
            }
            return [
                'success' => true,
                'result' => $result
            ];
        } else {
            return [
                'success' => false,
            ];
        }
    }

    public function actionAllPacients()
    {
        $all = BioUserPacient::find()->all();
        if(count($all) > 0){
            $result = [];
            foreach ($all as $one){
                $result[$one->user_id] = BioUser::getUserInfoById($one->user_id);
            }
            return [
                'success' => true,
                'result' => $result
            ];
        } else {
            return [
                'success' => false,
            ];
        }
    }
}